name: "Build Config"
description: "Composite action to build the Kong API configuration"
inputs:
  environment:
    description: "Environment to deploy to"
    required: true
  api:
    description: "Path to the API folder"
    required: true
outputs:
  api_name:
    description: "API name"
    value: ${{ steps.deck-vars.outputs.api_name }}
  api_version:
    description: "API version"
    value: ${{ steps.deck-vars.outputs.api_version }}
  api_major_version:
    description: "API major version"
    value: ${{ steps.deck-vars.outputs.api_major_version }}
  api_namespace:
    description: "API namespace"
    value: ${{ steps.deck-vars.outputs.api_namespace }}
  team_name:
    description: "Team name"
    value: ${{ steps.deck-vars.outputs.team_name }}
  control_plane_name:
    description: "Control plane name"
    value: ${{ steps.deck-vars.outputs.control_plane_name }}
  system_account:
    description: "System account"
    value: ${{ steps.deck-vars.outputs.system_account }}
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: kong/setup-deck@v1
      with:
        version: latest

    - uses: kong/setup-inso@v2
      with:
        inso-version: 11.0.2

    - name: Setup decK variables
      id: deck-vars
      shell: bash
      run: |
        SPEC_ID=$(yq eval '.spec.meta.id' ${{ env.INSOMNIA_FILE }})
        inso export spec $SPEC_ID -w ${{ env.INSOMNIA_FILE }} -o ${{ env.BUILD_FOLDER }}/oas.yaml
        
        api_name=$(yq eval '.info.title' ${{ env.BUILD_FOLDER }}/oas.yaml | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
        api_version=$(yq eval '.info.version' ${{ env.BUILD_FOLDER }}/oas.yaml)
        major_version=$(echo $api_version | cut -d '.' -f 1)
        team_name="flight-data"
        control_plane_name="${team_name}-cp"
        system_account="sa-${control_plane_name}-admin"

        echo "DECK_API_NAME=$api_name" >> $GITHUB_ENV
        echo "DECK_API_VERSION=$api_version" >> $GITHUB_ENV
        echo "DECK_API_MAJOR_VERSION=v$major_version" >> $GITHUB_ENV
        echo "DECK_TEAM_NAME=$team_name" >> $GITHUB_ENV
        echo "DECK_CONFIG_NAMESPACE_PATH_PREFIX=/$api_name" >> $GITHUB_ENV
        echo "CONTROL_PLANE_NAME=$control_plane_name" >> $GITHUB_ENV
        echo "SYSTEM_ACCOUNT=$system_account" >> $GITHUB_ENV

        echo "api_name=$api_name" >> $GITHUB_OUTPUT
        echo "api_major_version=v$major_version" >> $GITHUB_OUTPUT
        echo "api_namespace=/$api_name" >> $GITHUB_OUTPUT
        echo "team_name=$team_name" >> $GITHUB_OUTPUT
        echo "control_plane_name=$control_plane_name" >> $GITHUB_OUTPUT
        echo "system_account=$system_account" >> $GITHUB_OUTPUT

    - name: Lint OpenAPI Spec
      shell: bash
      run: |
        SPEC_ID=$(yq eval '.spec.meta.id' ${{ env.INSOMNIA_FILE }})
        inso lint spec $SPEC_ID -w ${{ env.INSOMNIA_FILE }} --verbose
        inso export spec $SPEC_ID -w ${{ env.INSOMNIA_FILE }} -o ${{ env.BUILD_FOLDER }}/oas.yaml

    - name: Convert OAS to Kong
      shell: bash
      run: cat oas.yaml | deck file openapi2kong > $BUILD_FOLDER/kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

    - name: Add plugins
      shell: bash
      run: |
        cat kong.yaml | deck file add-plugins $API_PLUGINS_FOLDER/*.yaml -o kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

    - name: Apply patches
      shell: bash
      run: |
        cat kong.yaml | deck file patch \
          $API_PATCHES_FOLDER/*.yaml -o kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

    - name: Add namespace
      shell: bash
      run: cat kong.yaml | deck file namespace --path-prefix=$DECK_CONFIG_NAMESPACE_PATH_PREFIX -o kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

  #     - name: Add Platform level plugins
  #       run: |
  #         cat kong.yaml | deck file add-plugins \
  #           $PLATFORM_FOLDER/kong/plugins/*.yaml -o kong.yaml
  #       working-directory: ${{ env.BUILD_FOLDER }}

  #     - name: Apply Platform level patches
  #       run: |
  #         cat kong.yaml | deck file patch \
  #           $PLATFORM_FOLDER/kong/patches/*.yaml -o kong.yaml
  #       working-directory: ${{ env.BUILD_FOLDER }}

    - name: Add Tags
      shell: bash
      run: |
        cat kong.yaml | deck file add-tags $DECK_TEAM_NAME $DECK_API_NAME $DECK_API_MAJOR_VERSION -o kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

    - name: Render Config
      shell: bash
      run: |
        deck file render --populate-env-vars kong.yaml \
          -o kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

      # - name: Lint Config
      #   run: deck file lint -s kong.yaml ${{ env.PLATFORM_FOLDER }}/kong.ruleset.yaml;
      #   working-directory: ${{ env.BUILD_FOLDER }}

    - name: Debug Config
      shell: bash
      run: cat kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

    - name: Validate Config
      shell: bash
      run: deck file validate kong.yaml
      working-directory: ${{ env.BUILD_FOLDER }}

    - name: Diff Config
      shell: bash
      run: |
        deck gateway diff kong.yaml  \
          --select-tag $DECK_API_NAME \
          --select-tag $DECK_API_MAJOR_VERSION \
          --select-tag generated_by:deck \
          --konnect-addr="${{ env.KONNECT_SERVER_URL }}" \
          --konnect-token="${{ secrets.KONNECT_PAT }}" \
          --konnect-control-plane-name="${{ env.CONTROL_PLANE_NAME }}" > kong_diff.txt
      working-directory: ${{ env.BUILD_FOLDER }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      shell: bash
      with:
        name: config
        path: |
          ${{ env.BUILD_FOLDER }}/kong.yaml
          ${{ env.BUILD_FOLDER }}/kong_diff.txt